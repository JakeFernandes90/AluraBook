.cabecalho__menu-hamburguer {
    width: 36px;
    height: 36px;
    background-image: url("../img/Menu.svg");
    background-repeat: no-repeat;
    background-position: center;
    display: inline-block;
}

.container__botao:checked ~ .container__rotulo > .cabecalho__menu-hamburguer {
    background-image: url("../img/MenuAberto.svg");
}

.container__botao:checked ~ .container__rotulo {
    background: var(--azul-degrade);
}

.cabecalho {
    background-color: var(--branco);
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative; /*o cabecalho é relative para ser referencia para posicionar o lista-menu que é absolute*/
}

.container__botao {
    display: none;
}

.container__botao:checked ~ .lista-menu {
    display: block; /*se o input do botao estiver checked irá procurar a lista do menu e colocar o display block, o ~ é o combinador das duas classes*/
}

.lista-menu {
    display: none; /*desaparece os elementos da lista*/
    position: absolute;
    top: 100%;
    width: 60vw;
}

.lista-menu__titulo,
.lista-menu__item {
    padding: 1rem;
    background-color: var(--branco);
}

.lista-menu__titulo {
    color: var(--laranja);
    font-weight: 700;
}

.lista-menu__link {
    background: var(--azul-degrade);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.container {
    display: flex;
    align-items: center;
}

.container__imagem {
    padding: 0.4rem;
}

/* Uma decisão que precisa ser tomada é de se usar max-width ou min-width. 
O max é ideal para quando temos um layout Desktop pronto e queremos adaptá-lo para dispositivos menores - vamos então definindo novas regras que se aplicam só aos dispositivos de no máximo certo tamanho. 
Já o min pode ser útil quando criamos um site só mobile ou começamos pelo mobile - nesse caso, é mais fácil ter um layout base e ir customizando para dispositivos maiores, com no mínimo certo tamanho.
O screen é um media type, ou seja, um tipo de mídia. É outro tipo de característica comumente usada na declaração de media queries. Se você não especificar nenhum valor, ele irá utilizar o seu padrão que é “all” (para todos os tipos de mídia).*/

.container__titulo,
.opcoes {
    display: none;
}

.container__texto {
    display: none;
}

@media screen and (min-width: 1024px) {

    .container__titulo,
    .container__titulo_negrito {
        font-family: var(--fonte-secundaria);
        font-size: 30px;
    }

    .container__titulo {
        display: block;
        font-weight: 400;
    }

    .container__titulo_negrito {
        font-weight: 700;
    }

    .opcoes {
        display: flex;
    }

    .opcoes__item {
        padding: 0 1rem;
    }

    .opcoes__link {
        text-decoration: none;
        color: var(--preto);
    }

    .cabecalho__menu-hamburguer {
        display: none;
    }

    .container__imagem_favoritos {
       display: none; 
    }

    .opcoes__botao:checked ~ .lista-menu {
        display: block;
        width: auto;
    }

    .opcoes__botao {
        display: none;
    }   

    .opcoes__botao:checked ~ .opcoes__rotulo > .opcoes__item {
        color: var(--branco);
        background: var(--azul-degrade);
    }

    .opcoes__item {
        padding: 1.3rem 1rem;
    }

    .lista-menu__item:hover {
        background: var(--azul-degrade);
    }

    .lista-menu__item:hover > .lista-menu__link {
        -webkit-text-fill-color: var(--branco);
        text-decoration: none;
    } 
}

@media screen and (min-width: 1728px) {

    .cabecalho {
        padding: 0 2rem;
    }

    .opcoes {
        margin-right: auto;
    }

    .container__link {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: var(--preto);
    }

    .container__texto {
        display: block;
    }
}

/* Relação entre dois seletores:

+ Seleciona elementos que estão logo após o elemento especificado.

~ Seleciona elementos que estão depois, mas não necessariamente em seguida.

> Seleciona elementos que estão dentro do elemento especificado.

*/